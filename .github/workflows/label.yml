name: Smart Labeler with AI

on: 
  pull_request_target:

jobs:
  smart-label:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
      models: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 1: Path-based labeling
      - uses: actions/labeler@v4
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      # Step 2: Fetch commits for PR
      - name: Get commit messages
        id: commits
        run: |
          gh pr view ${{ github.event.pull_request.number }} --json commits --jq '.commits[].commit.message' | tr '\n' ' ' > commit_messages.txt
          COMMITS=$(cat commit_messages.txt)
          echo "commits=$COMMITS" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: AI-based label suggestion
      - name: Suggest labels using AI
        id: ai_label
        uses: actions/ai-inference@v1
        with:
          prompt: |
            Analyze the following pull request title, body, and commit messages, and suggest up to 3 relevant labels that match our repository labels:
            Title: ${{ github.event.pull_request.title }}
            Body: ${{ github.event.pull_request.body }}
            Commits: ${{ steps.commits.outputs.commits }}
            Output format: label1, label2, label3

      # Step 4: Apply AI suggested labels
      - name: Apply AI suggested labels
        run: |
          LABELS="${{ steps.ai_label.outputs.response }}"
          echo "Applying labels: $LABELS"
          # chuyá»ƒn dáº¥u pháº©y thÃ nh space Ä‘á»ƒ gh CLI nháº­n Ä‘Ãºng
          gh pr edit ${{ github.event.pull_request.number }} --add-label $(echo "$LABELS" | tr ',' ' ')
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Optional: Comment AI explanation
      - name: Comment AI explanation
        if: steps.ai_label.outputs.response != ''
        run: |
          gh pr comment ${{ github.event.pull_request.number }} --body "ðŸ¤– Suggested labels based on PR content: ${{ steps.ai_label.outputs.response }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
